import { defineStore } from 'pinia'
import moment from 'moment'
import { ref } from 'vue'
import axios from 'axios'

export const useMainStore = defineStore({
  id: 'main',
  state: () => ({
    ssot: {
      data: [
        {
          id: '',
          title: '',
          href: '',
          content_type: '',
          notes: [
            {
              type: '',
              note: ''
            }
          ],
          content_structure: [],
          content_containers: [
            {
              company_name: '',
              company_location: '',
              country: '',
              country_code: '',
              position: '',
              date_from: '',
              date_until: '',
              responsibilities: [],
              highlights: [],
              tech_stack: []
            }
          ]
        }
      ],
      settings: {
        engine_version: '3.0',
        data_revision: '1.0',
        data_last_updated: '2023-06-06',
        knowledge_matrix: [
          {
            tooltip: 'Not Applicable or Not Related',
            id: 0,
            short: 'NA',
            long: 'Not Applicable'
          }
        ]
      }
    },
    loading: false,
    isHome: false,
    error: {},
    /////////////// Feature Flags:
    //// Use local data as a priority source:
    priorityForLocalData: true
  }),
  getters: {
    lastEmployer(): any {
      // @ts-ignore
      const employersList = ref(
        // @ts-ignore
        this.ssot.data.find(({ id }) => id === 'history').content_containers
      )

      return employersList.value[0]
    },
    pastEmployers(): any {
      // @ts-ignore
      const employersList = this.ssot.data.find(({ id }) => id === 'history').content_containers
      const [, ...rest] = employersList
      return rest
    },
    getHomeContent(): any {
      // @ts-ignore
      const homeContent = this.ssot.data.find(({ id }) => id === 'home').content_containers
      return Object.values(homeContent)[0]
    }
  },
  actions: {
    async fetchPageData() {
      this.loading = true

      if (this.priorityForLocalData) {
        await this.fetchPageDataFromLocal()
        return
      }

      try {
        const response = await axios.get(
          'https://92e38813-f539-4d94-9cd6-8660a7a518cb.mock.pstmn.io/api/cv/1'
        )
        console.log('response:', response)
        this.ssot = response.data
      } catch (error: any) {
        console.error('request rejected from mock server with:', error.message)
        console.info('Utilising local data from file ')
        await this.fetchPageDataFromLocal()
      } finally {
        this.loading = false
      }
    },
    calculatedKnowledgeLevel(value: number): object | string {
      const item = this.ssot.settings.knowledge_matrix.find(({ id }) => id === value)

      if (item) {
        return item
      }

      return 'NA'
    },
    async fetchPageDataFromLocal() {
      this.loading = true

      try {
        const response = await axios.get('/site_data.json')
        console.log('response:', response)
        this.ssot = response.data
      } catch (error) {
        console.error('error:', error)
      } finally {
        this.loading = false
      }
    },
    getNoteByPageID(pageId: string): any {
      // @ts-ignore
      return this.ssot.data.find(({ id }) => id === pageId).notes
    },
    setHomePageFlag(value: boolean) {
      this.isHome = value
    }
  }
})
