import { defineStore } from 'pinia'
import moment from 'moment'
import { ref } from 'vue'
import axios from 'axios'

export const useMainStore = defineStore({
  id: 'main',
  state: () => ({
    ssot: {
      data: [
        {
          id: '',
          title: '',
          href: '',
          content_type: '',
          notes: [
            {
              type: '',
              note: ''
            }
          ],
          content_structure: [],
          content_containers: [
            {
              company_name: '',
              company_location: '',
              country: '',
              country_code: '',
              position: '',
              date_from: '',
              date_until: '',
              responsibilities: [],
              highlights: []
            }
          ]
        }
      ],
      settings: {
        engine_version: '3.0',
        data_revision: '1.0',
        data_last_updated: '2023-06-06',
        knowledge_matrix: [
          {
            tooltip: 'Not Applicable or Not Related',
            id: 0,
            short: 'NA',
            long: 'Not Applicable'
          }
        ]
      }
    },
    loading: false,
    error: {}
  }),
  getters: {
    lastEmployer(): any {
      // console.log('state', state)
      // @ts-ignore
      const employersList = ref(
        this.ssot.data.find(({ id }) => id === 'history').content_containers
      )
      // console.log('employersList at lastEmployer - original:', employersList)
      //  let item = employersList.findIndex((index) => index === 0));
      return employersList.value[0]
    },
    pastEmployers(): any {
      // console.log('state', state)
      // @ts-ignore
      const employersList = this.ssot.data.find(({ id }) => id === 'history').content_containers
      const [, ...rest] = employersList
      // console.log('employersList:', employersList)
      //  let item = employersList.findIndex((index) => index === 0));

      // console.log('Past at lastEmployer - original:', rest)
      // console.log('employersList at lastEmployer - original:', employersList)
      return rest
    }
  },
  actions: {
    async fetchPageData() {
      this.loading = true

      try {
        const response = await axios.get(
          'https://92e38813-f539-4d94-9cd6-8660a7a518cb.mock.pstmn.io/api/cv/1'
        )
        console.log('response:', response)
        this.ssot = response.data
      } catch (error: any) {
        console.error('request rejected from mock server with:', error.message)
        console.info('Utilising local data from file ')
        await this.fetchPageDataFromLocal()
      } finally {
        this.loading = false
      }
    },
    calculatedKnowledgeLevel(value: number): object | string {
      const item = this.ssot.settings.knowledge_matrix.find(({ id }) => id === value)

      if (item) {
        // console.log(item.short);
        return item
      }

      return 'NA'
    },
    async fetchPageDataFromLocal() {
      this.loading = true

      try {
        const response = await axios.get('/site_data.json')
        console.log('response:', response)
        this.ssot = response.data
      } catch (error) {
        console.error('error:', error)
      } finally {
        this.loading = false
      }
    },

    getNoteByPageID(pageId: string): any {
      return this.ssot.data.find(({ id }) => id === pageId).notes
    }
    // async fetchPageData() {
    //   // this.ssot = {};
    //   this.loading = true
    //   this.error = {}
    //   try {
    //     this.ssot = await fetch(
    //       'https://92e38813-f539-4d94-9cd6-8660a7a518cb.mock.pstmn.io/api/cv/1'
    //     ).then((response) => response.json())
    //   } catch (error) {
    //     // @ts-ignore
    //     this.error = error
    //   } finally {
    //     this.loading = false
    //   }
    // }
  }
})
